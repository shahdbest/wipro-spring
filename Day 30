--> run the eureka server created in last example on day 29
--> modify the product and purchase services created on day 29


-------------------product controller

package com.example.productservice.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.productservice.model.Product;

@RestController
@RequestMapping("productservice")
public class ProductController {

	
	@GetMapping
	public ResponseEntity<Product> getProd()
	{
		return new ResponseEntity<Product>(new Product(1, "Royal Enfield Hunter 350", 200000.0F),HttpStatus.OK);
	}

	@GetMapping("/prods")
	public ResponseEntity<List<Product>> getProds()
	{
	Product p1=	new Product(1, "Royal Enfield Hunter 350", 200000.0F);
	Product p2=	new Product(2, "Royal Enfield Classic 350", 270000.0F);
	Product p3=	new Product(3, "Royal Enfield  350", 275000.0F);
		
		List<Product> products= new ArrayList<>();
		products.add(p3);
		products.add(p2);
		products.add(p1);
		
		return new ResponseEntity<List<Product>>(products,HttpStatus.OK);
	}

	@Value("${server.port}")
	int myServerPort;

	
	
	@GetMapping("/getinfo")
	public ResponseEntity<String> getInfo()
	{
		String status=" the produsct service is running on port "+myServerPort;
		
		return new ResponseEntity<String>(status,HttpStatus.OK);
	}

	
	
	
}


------------------------------NOTE PRODUCT SERVICE WILL HAVE 3 INSTANCE RUNNING

---app.prop of product service 

server.port=1111
spring.application.name=product


---> RUN as spring boot project



------------------------------------------------------

modify the application properties without closing the service 

---app.prop of product service 

server.port=1112
spring.application.name=product


---> RUN as spring boot project


------------------------------------------------------

modify the application properties without closing the service 

---app.prop of product service 

server.port=1113
spring.application.name=product


---> RUN as spring boot project


--------------> go to eureka console and check all 3 instance of product service is up or not 


----------------------purchaseservice 


package com.example.purchaseservice.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.example.purchaseservice.model.Product;

@RestController
@RequestMapping("purchaseservice")
public class PurchaseController {

	//httpClient in angular
	
	@Autowired
	RestTemplate restTemplate;
	
	@GetMapping("listprod")
	public ResponseEntity<Product> getProdFromProdSrv()
	{
		Product product=restTemplate.getForObject("http://PRODUCT/productservice", Product.class);
	return new ResponseEntity<Product>(product,HttpStatus.OK);
	
		}
	
	
	@GetMapping("listprods")
	public ResponseEntity<List<Product>> getProdsFromProdSrv()
	{
		List<Product> products=restTemplate.getForObject("http://PRODUCT/productservice/prods", List.class);
	return new ResponseEntity<List<Product>>(products,HttpStatus.OK);
	
		}
	
	

	@GetMapping("info")
	public ResponseEntity<String> getProdInfo()
	{
		String status=restTemplate.getForObject("http://PRODUCT/productservice/getinfo", String.class);
	return new ResponseEntity<String>(status,HttpStatus.OK);
	
		}
	
	
}


=======================================url 


http://localhost:1111/productservice/getinfo

http://localhost:1112/productservice/getinfo

http://localhost:1113/productservice/getinfo


----

http://localhost:5555/purchaseservice/info


run the purchase service get reuqest multiple times and see load balancing 




















